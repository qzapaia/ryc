- prefetch resultado de búsqueda
- usar docz para la docu de los componentes
- usar formik para los fomularios
- hacer un branch con versión prelimiar, para el buscador:
"todavía no hay cocineros en esta zona, querés que te avisemos cuando haya?"
Y para publicar
"Contanos que te gustaría cocinar y nos pondremos en contacto con vos"

- cachear fonts con https://developers.google.com/web/tools/workbox/
- agregar una opcion en el menu general "mis datos" 
para configurar el nombre y las direcciones de recepcion del usuario
- cambiar "mi perfil" a "mi zona de envio" y sacar el nombre
- cambiar background en la home cuando estás logueado
- chequear "editar perfil" usar PageContent 
y poner el gris de PageContainer como opcional
- mix comidas
- https://ipdata.co/index.html
- https://www.mapbox.com/
- https://github.com/mariusandra/pigeon-maps
- cambiar la frase de la home cuando vuelve de ingresar
- revisar frase de la home
- confirmar sesion eterna
- form publicar comida en un solo paso (separar después en pasos)
- los platos tienen varias fechas de reparto (fecha - porciones - hora de cierre - hora de reparto)
- un plato está activo mientras tenga al menos una fecha de reparto futura
- agregar fechas disponibles y horarios limite para las comidas

- Proponer dejar tu mail cuando no se encuentran resultados

Buscador
- ordenar y agrupar por dia (hoy, mañana, fecha ...)

- la aclaración al pedir un plato es el primer mensaje de la charla

- usar mapas de mapbox
- conversational interface
- tensorflow
- desktop PWA cuando sea posible
  https://medium.com/dailyjs/goodbye-electron-hello-desktop-pwas-f316b8f39882